===
structs.txt
===
import log : fn(i32) -> unit from log

struct BoxInt { x : i32 }
struct Box[a] { x : a }

struct NestedInt { x : BoxInt }
struct Nested[a] { x : Box[a] }

variant Option[a] {
  struct None {},
  struct Some { val : a },
}
// Rec is just a non-empty linked list
struct RecInt { head : i32, tail : Option[RecInt] }
struct Rec[a] { head : a, tail : Option[Rec[a]] }

fn for_reci(r : RecInt, f : fn(i32) -> unit) {
  f(r.head);
  match r.tail {
    Option::None _ => {},
    Option::Some t => { for_reci(t.val, f) },
  }
}

fn for_rec[a](r : Rec[a], f : fn(a) -> unit) {
  f(r.head);
  match r.tail {
    Option::None _ => {},
    Option::Some t => { for_rec(t.val, f) },
  }
}

fn main() {
  let bi = BoxInt { x = 5 };
  log(bi.x);

  let b = Box { x = 6 };
  log(b.x);

  let ni = NestedInt { x = bi };
  log(ni.x.x);

  let n = Nested { x = b };
  log(n.x.x);

  let ri = RecInt { head = 1, tail = Option::Some { val = RecInt { head = 2, tail = Option::None {} } } };
  for_reci(ri, log);

  let r = Rec { head = 1, tail = Option::Some { val = Rec { head = 2, tail = Option::None {} } } };
  for_rec(r, log);
}


---

(source_file
  (top_import
    (lower_ident)
    (ty_func
      (ty_i32)
      (ty_unit))
    (lower_ident))
  (top_struct
    (upper_ident)
    (struct_field_top
      (lower_ident)
      (ty_i32)))
  (top_struct
    (upper_ident)
    (type_params
      (lower_ident))
    (struct_field_top
      (lower_ident)
      (ty_var
        (lower_ident))))
  (top_struct
    (upper_ident)
    (struct_field_top
      (lower_ident)
      (ty_cons
        (upper_ident))))
  (top_struct
    (upper_ident)
    (type_params
      (lower_ident))
    (struct_field_top
      (lower_ident)
      (ty_cons
        (upper_ident)
        (type_args
          (ty_var
            (lower_ident))))))
  (top_variant
    (upper_ident)
    (type_params
      (lower_ident))
    (top_struct
      (upper_ident))
    (top_struct
      (upper_ident)
      (struct_field_top
        (lower_ident)
        (ty_var
          (lower_ident)))))
  (comment)
  (top_struct
    (upper_ident)
    (struct_field_top
      (lower_ident)
      (ty_i32))
    (struct_field_top
      (lower_ident)
      (ty_cons
        (upper_ident)
        (type_args
          (ty_cons
            (upper_ident))))))
  (top_struct
    (upper_ident)
    (type_params
      (lower_ident))
    (struct_field_top
      (lower_ident)
      (ty_var
        (lower_ident)))
    (struct_field_top
      (lower_ident)
      (ty_cons
        (upper_ident)
        (type_args
          (ty_cons
            (upper_ident)
            (type_args
              (ty_var
                (lower_ident))))))))
  (top_func
    (lower_ident)
    (func_params
      (func_param
        (lower_ident)
        (ty_cons
          (upper_ident)))
      (func_param
        (lower_ident)
        (ty_func
          (ty_i32)
          (ty_unit))))
    (block_e
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (var_e
                (lower_ident))
              (lower_ident)))))
      (expr_decl
        (match_e
          (struct_idx_e
            (var_e
              (lower_ident))
            (lower_ident))
          (match_branch
            (variant_pat
              (qualifier
                (upper_ident))
              (upper_ident)
              (lower_ident))
            (block_e))
          (match_branch
            (variant_pat
              (qualifier
                (upper_ident))
              (upper_ident)
              (lower_ident))
            (block_e
              (expr_decl
                (call_e
                  (var_e
                    (lower_ident))
                  (call_args
                    (struct_idx_e
                      (var_e
                        (lower_ident))
                      (lower_ident))
                    (var_e
                      (lower_ident)))))))))))
  (top_func
    (lower_ident)
    (type_params
      (lower_ident))
    (func_params
      (func_param
        (lower_ident)
        (ty_cons
          (upper_ident)
          (type_args
            (ty_var
              (lower_ident)))))
      (func_param
        (lower_ident)
        (ty_func
          (ty_var
            (lower_ident))
          (ty_unit))))
    (block_e
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (var_e
                (lower_ident))
              (lower_ident)))))
      (expr_decl
        (match_e
          (struct_idx_e
            (var_e
              (lower_ident))
            (lower_ident))
          (match_branch
            (variant_pat
              (qualifier
                (upper_ident))
              (upper_ident)
              (lower_ident))
            (block_e))
          (match_branch
            (variant_pat
              (qualifier
                (upper_ident))
              (upper_ident)
              (lower_ident))
            (block_e
              (expr_decl
                (call_e
                  (var_e
                    (lower_ident))
                  (call_args
                    (struct_idx_e
                      (var_e
                        (lower_ident))
                      (lower_ident))
                    (var_e
                      (lower_ident)))))))))))
  (top_func
    (lower_ident)
    (func_params)
    (block_e
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (int_lit))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (var_e
                (lower_ident))
              (lower_ident)))))
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (int_lit))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (var_e
                (lower_ident))
              (lower_ident)))))
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (var_e
              (lower_ident)))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (struct_idx_e
                (var_e
                  (lower_ident))
                (lower_ident))
              (lower_ident)))))
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (var_e
              (lower_ident)))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (struct_idx_e
              (struct_idx_e
                (var_e
                  (lower_ident))
                (lower_ident))
              (lower_ident)))))
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (int_lit))
          (struct_field_e
            (lower_ident)
            (struct_e
              (qualifier
                (upper_ident))
              (upper_ident)
              (struct_field_e
                (lower_ident)
                (struct_e
                  (upper_ident)
                  (struct_field_e
                    (lower_ident)
                    (int_lit))
                  (struct_field_e
                    (lower_ident)
                    (struct_e
                      (qualifier
                        (upper_ident))
                      (upper_ident)))))))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (var_e
              (lower_ident))
            (var_e
              (lower_ident)))))
      (let_decl
        (lower_ident)
        (struct_e
          (upper_ident)
          (struct_field_e
            (lower_ident)
            (int_lit))
          (struct_field_e
            (lower_ident)
            (struct_e
              (qualifier
                (upper_ident))
              (upper_ident)
              (struct_field_e
                (lower_ident)
                (struct_e
                  (upper_ident)
                  (struct_field_e
                    (lower_ident)
                    (int_lit))
                  (struct_field_e
                    (lower_ident)
                    (struct_e
                      (qualifier
                        (upper_ident))
                      (upper_ident)))))))))
      (expr_decl
        (call_e
          (var_e
            (lower_ident))
          (call_args
            (var_e
              (lower_ident))
            (var_e
              (lower_ident))))))))
